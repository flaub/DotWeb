//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DotWeb.Translator.Test {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class General {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal General() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DotWeb.Translator.Test.General", typeof(General).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $Class(null, &apos;&apos;, &apos;__f__AnonymousType0$2&apos;);
        ///
        ///__f__AnonymousType0$2.prototype.$ctor = function(Key, Value) {
        ///	this._Key_i__Field = Key;
        ///	this._Value_i__Field = Value;
        ///	return this;
        ///};
        ///
        ///__f__AnonymousType0$2.prototype.get_Key = function() {
        ///	return this._Key_i__Field;
        ///};
        ///
        ///__f__AnonymousType0$2.prototype.get_Value = function() {
        ///	return this._Value_i__Field;
        ///};
        ///
        ///$Class(null, &apos;System&apos;, &apos;Console&apos;);
        ///
        ///System.Console.WriteLine$3 = function(format, arg0, arg1) {
        ///	console.log(format);
        ///};
        ///
        ///$Class( [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AnonymousType {
            get {
                return ResourceManager.GetString("AnonymousType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $Class(null, &apos;System&apos;, &apos;Exception&apos;);
        ///
        ///System.Exception.prototype.set_Message = function(value) {
        ///	this._Message_k__BackingField = value;
        ///};
        ///
        ///System.Exception.prototype.$ctor$1 = function(message) {
        ///	this.set_Message(message);
        ///	return this;
        ///};
        ///
        ///$Class(System.Exception, &apos;System&apos;, &apos;SystemException&apos;);
        ///
        ///System.SystemException.prototype.$ctor$1 = function(message) {
        ///	this.$super.$ctor$1(message);
        ///	return this;
        ///};
        ///
        ///$Class(System.SystemException, &apos;System&apos;, &apos;ArgumentException&apos;);
        ///
        ///System.ArgumentE [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ArgumentException {
            get {
                return ResourceManager.GetString("ArgumentException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $Class(null, &apos;System&apos;, &apos;Exception&apos;);
        ///
        ///System.Exception.prototype.set_Message = function(value) {
        ///	this._Message_k__BackingField = value;
        ///};
        ///
        ///System.Exception.prototype.$ctor$1 = function(message) {
        ///	this.set_Message(message);
        ///	return this;
        ///};
        ///
        ///$Class(System.Exception, &apos;System&apos;, &apos;SystemException&apos;);
        ///
        ///System.SystemException.prototype.$ctor$0 = function() {
        ///	this.$super.$ctor$1(&quot;System error.&quot;);
        ///	return this;
        ///};
        ///
        ///$Class(System.SystemException, &apos;System&apos;, &apos;NotImplementedException&apos;);
        ///
        ///System.No [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Callback {
            get {
                return ResourceManager.GetString("Callback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $Class(null, &apos;H8&apos;, &apos;Base&apos;);
        ///
        ///$Class(H8.Base, &apos;H8&apos;, &apos;Derived&apos;);
        ///
        ///H8.Derived.NextId = function() {
        ///	var D_0 = H8.Derived.counter;
        ///	H8.Derived.counter = D_0 + 1;
        ///	return D_0;
        ///};
        ///
        ///H8.Base.prototype.$ctor = function() {
        ///	return this;
        ///};
        ///
        ///H8.Derived.prototype.$ctor$0 = function() {
        ///	this.id = H8.Derived.NextId();
        ///	this.$super.$ctor();
        ///	return this;
        ///};
        ///
        ///H8.Base.prototype.BaseMethod = function() {
        ///};
        ///
        ///H8.Derived.prototype.DerviedMethod = function() {
        ///	this.BaseMethod();
        ///};
        ///
        ///$Class(null, &apos; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CallDerived {
            get {
                return ResourceManager.GetString("CallDerived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $Class(null, &apos;System&apos;, &apos;Console&apos;);
        ///
        ///System.Console.WriteLine$1 = function(value) {
        ///	console.log(value);
        ///};
        ///
        ///$Class(null, &apos;System&apos;, &apos;Math&apos;);
        ///
        ///System.Math.Sin = function(a) {
        ///	return Math.sin(a);
        ///};
        ///
        ///System.Math.Cos = function(a) {
        ///	return Math.cos(a);
        ///};
        ///
        ///$Class(null, &apos;H8&apos;, &apos;GeneralTests&apos;);
        ///
        ///H8.GeneralTests.prototype.TakeParameters = function(str, value, rad, flag) {
        ///	System.Console.WriteLine$1(str);
        ///	var x = System.Math.Sin(rad[value] * 1.570795);
        ///	return System.Math.Cos(x);
        ///};
        ///
        ///Syst [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CallTakeParameters {
            get {
                return ResourceManager.GetString("CallTakeParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to H8.GeneralTests.prototype.Cifuentes = function() {
        ///	var x = 5;
        ///	var y = x * 5;
        ///	if (x &lt; y) {
        ///		x = x * y;
        ///		if ((x * 2) &lt;= y) {
        ///			y = y &lt;&lt; 3;
        ///		}
        ///		else {
        ///			x = x &lt;&lt; 3;
        ///		}
        ///	}
        ///	var a = 0;
        ///	while (a &lt; 10) {
        ///		var b = a;
        ///		do {
        ///			b = b + 1;
        ///			System.Console.WriteLine$3(&quot;{0}, {1}&quot;, a, b);
        ///		} while (b &lt; 5);
        ///		a = a + 1;
        ///	}
        ///	if ((x &lt; y) || ((y * 2) &gt; x)) {
        ///		x = (x + y) - 10;
        ///		y = y / 2;
        ///	}
        ///};
        ///.
        /// </summary>
        internal static string Cifuentes {
            get {
                return ResourceManager.GetString("Cifuentes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $Class(null, &apos;DotWeb.Client&apos;, &apos;JsScript&apos;);
        ///
        ///DotWeb.Client.JsScript.prototype.$ctor = function() {
        ///	return this;
        ///};
        ///
        ///$Class(null, &apos;System&apos;, &apos;Console&apos;);
        ///
        ///System.Console.WriteLine$1 = function(value) {
        ///	console.log(value);
        ///};
        ///
        ///$Class(DotWeb.Client.JsScript, &apos;H8&apos;, &apos;GeneralTests_ClientScriptClass&apos;);
        ///
        ///H8.GeneralTests_ClientScriptClass.prototype.$ctor = function() {
        ///	this.$super.$ctor();
        ///	System.Console.WriteLine$1(&quot;Hello&quot;);
        ///	return this;
        ///};
        ///
        ///$Class(null, &apos;H8&apos;, &apos;GeneralTests&apos;);
        ///
        ///H8.GeneralTes [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClientScript {
            get {
                return ResourceManager.GetString("ClientScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to H8.GeneralTests.prototype.ComplexNestedTry = function(x) {
        ///	System.Console.WriteLine$1(&quot;enter&quot;);
        ///	try {
        ///		System.Console.WriteLine$1(&quot;outer try&quot;);
        ///		try {
        ///			System.Console.WriteLine$1(&quot;inner try&quot;);
        ///		}
        ///		finally {
        ///			System.Console.WriteLine$1(&quot;inner finally&quot;);
        ///		}
        ///		System.Console.WriteLine$1(&quot;inner follow&quot;);
        ///		if (x == 10) {
        ///			System.Console.WriteLine$1(&quot;x == 10&quot;);
        ///		}
        ///	}
        ///	finally {
        ///		System.Console.WriteLine$1(&quot;outer finally&quot;);
        ///	}
        ///	System.Console.WriteLine$1(&quot;exit&quot;);
        ///};
        ///.
        /// </summary>
        internal static string ComplexNestedTry {
            get {
                return ResourceManager.GetString("ComplexNestedTry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $Class(null, &apos;H8&apos;, &apos;GeneralTests_InnerClassTest&apos;);
        ///
        ///H8.GeneralTests_InnerClassTest.prototype.set_Text = function(value) {
        ///	this._Text_k__BackingField = value;
        ///};
        ///
        ///H8.GeneralTests_InnerClassTest.prototype.set_Value = function(value) {
        ///	this._Value_k__BackingField = value;
        ///};
        ///
        ///H8.GeneralTests_InnerClassTest.prototype.$ctor$1 = function(text, value) {
        ///	this.set_Text(text);
        ///	this.set_Value(value);
        ///	return this;
        ///};
        ///
        ///H8.GeneralTests_InnerClassTest.prototype.$ctor$0 = function() {
        ///	return this;
        ///} [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateInnerObject {
            get {
                return ResourceManager.GetString("CreateInnerObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $Class(null, &apos;H8&apos;, &apos;OuterClassTest&apos;);
        ///
        ///H8.OuterClassTest.prototype.set_Text = function(value) {
        ///	this._Text_k__BackingField = value;
        ///};
        ///
        ///H8.OuterClassTest.prototype.set_Value = function(value) {
        ///	this.m_value = value;
        ///};
        ///
        ///H8.OuterClassTest.prototype.$ctor$1 = function(text, value) {
        ///	this.set_Text(text);
        ///	this.set_Value(value);
        ///	return this;
        ///};
        ///
        ///H8.OuterClassTest.prototype.$ctor$0 = function() {
        ///	return this;
        ///};
        ///
        ///H8.OuterClassTest.prototype.get_Text = function() {
        ///	return this._Text_k__ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateOuterObject {
            get {
                return ResourceManager.GetString("CreateOuterObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to H8.GeneralTests.prototype.EscapeStringLiterals = function() {
        ///	System.Console.WriteLine$1(&quot;line 1\nline 2&quot;);
        ///	System.Console.WriteLine$1(&quot;\tindented&quot;);
        ///	System.Console.WriteLine$1(&quot;x\\y&quot;);
        ///	System.Console.WriteLine$1(&quot;begin \&quot;quoted\&quot; end&quot;);
        ///};
        ///.
        /// </summary>
        internal static string EscapeStringLiterals {
            get {
                return ResourceManager.GetString("EscapeStringLiterals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to H8.GeneralTests.prototype.EscapeStringLiterals = function() {
        ///	System.Console.WriteLine$1(&quot;line 1\nline 2&quot;);
        ///	System.Console.WriteLine$1(&quot;\tindented&quot;);
        ///	System.Console.WriteLine$1(&quot;x\\y&quot;);
        ///	System.Console.WriteLine$1(&quot;begin \&quot;quoted\&quot; end&quot;);
        ///};
        ///.
        /// </summary>
        internal static string ExpectExceptionTest {
            get {
                return ResourceManager.GetString("ExpectExceptionTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to H8.GeneralTests.prototype.GitHub_Issue3 = function() {
        ///	new jQueryTest($doc);
        ///};
        ///.
        /// </summary>
        internal static string GitHub_Issue3 {
            get {
                return ResourceManager.GetString("GitHub_Issue3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $Class(null, &apos;H8&apos;, &apos;GeneralTests&apos;);
        ///
        ///H8.GeneralTests._GitHub_Issue4_b__2 = function() {
        ///	$wnd.alert(&quot;test&quot;);
        ///};
        ///
        ///H8.GeneralTests.prototype.GitHub_Issue4 = function() {
        ///	if (!H8.GeneralTests.CS$__9__CachedAnonymousMethodDelegate3) {
        ///		H8.GeneralTests.CS$__9__CachedAnonymousMethodDelegate3 = $Delegate(H8.GeneralTests, H8.GeneralTests._GitHub_Issue4_b__2);
        ///	}
        ///	var action = H8.GeneralTests.CS$__9__CachedAnonymousMethodDelegate3;
        ///	action();
        ///};
        ///.
        /// </summary>
        internal static string GitHub_Issue4 {
            get {
                return ResourceManager.GetString("GitHub_Issue4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $Class(null, &apos;GitHub_Issue5&apos;, &apos;Class1&apos;);
        ///
        ///GitHub_Issue5.Class1._$ctor_b__0 = function() {
        ///	$wnd.alert(&quot;test&quot;);
        ///};
        ///
        ///GitHub_Issue5.Class1.prototype.Call = function(action) {
        ///	action();
        ///};
        ///
        ///GitHub_Issue5.Class1.prototype.$ctor = function() {
        ///	var R_1 = this;
        ///	if (!GitHub_Issue5.Class1.CS$__9__CachedAnonymousMethodDelegate1) {
        ///		GitHub_Issue5.Class1.CS$__9__CachedAnonymousMethodDelegate1 = $Delegate(GitHub_Issue5.Class1, GitHub_Issue5.Class1._$ctor_b__0);
        ///	}
        ///	R_1.Call(GitHub_Issue5.Class1.CS$__9_ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GitHub_Issue5 {
            get {
                return ResourceManager.GetString("GitHub_Issue5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to H8.GeneralTests.prototype.GitHub_Issue6 = function(x) {
        ///	System.Console.WriteLine$1(&quot;enter&quot;);
        ///	try {
        ///		System.Console.WriteLine$1(&quot;try begin&quot;);
        ///		if (x) {
        ///			throw new System.NotImplementedException().$ctor$0();
        ///		}
        ///		System.Console.WriteLine$1(&quot;try end&quot;);
        ///	}
        ///	catch (__ex__) {
        ///		if (__ex__ instanceof System.NotImplementedException) {
        ///			var ex = __ex__;
        ///			System.Console.WriteLine$1(&quot;NotImplementedException: &quot; + ex.get_Message());
        ///		}
        ///		else if (__ex__) {
        ///			var ex = __ex__;
        ///			System.Consol [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GitHub_Issue6 {
            get {
                return ResourceManager.GetString("GitHub_Issue6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to H8.GeneralTests.prototype.HelloWorld = function() {
        ///	System.Console.WriteLine$1(&quot;Hello World!&quot;);
        ///};
        ///
        ///.
        /// </summary>
        internal static string HelloWorld {
            get {
                return ResourceManager.GetString("HelloWorld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $Class(null, &apos;H8&apos;, &apos;IndexerTest&apos;);
        ///
        ///H8.IndexerTest.prototype.$ctor = function() {
        ///	return this;
        ///};
        ///
        ///$Class(null, &apos;System&apos;, &apos;Console&apos;);
        ///
        ///System.Console.WriteLine$0 = function(value) {
        ///	console.log(value);
        ///};
        ///
        ///$Class(null, &apos;H8&apos;, &apos;GeneralTests&apos;);
        ///
        ///H8.GeneralTests.prototype.Indexer = function() {
        ///	var indexer = new H8.IndexerTest().$ctor();
        ///	indexer[&quot;Test&quot;] = 1;
        ///	var value = indexer[&quot;Test&quot;];
        ///	System.Console.WriteLine$0(value);
        ///};
        ///.
        /// </summary>
        internal static string Indexer {
            get {
                return ResourceManager.GetString("Indexer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $Class(null, &apos;H8&apos;, &apos;GeneralTests&apos;);
        ///
        ///H8.GeneralTests._Linq_b__2 = function(ch /*System.Char*/) {
        ///	return System.Char.IsDigit(ch);
        ///};
        ///
        ///H8.GeneralTests.prototype.Linq = function() {
        ///	var loc0 = &quot;ABCDE99F-J74-12-89A&quot;;
        ///	if (!H8.GeneralTests.CS$__9__CachedAnonymousMethodDelegate3) {
        ///		H8.GeneralTests.CS$__9__CachedAnonymousMethodDelegate3 = $Delegate(H8.GeneralTests, H8.GeneralTests._Linq_b__2);
        ///	}
        ///	var loc1 = System.Linq.Enumerable.Where(loc0, H8.GeneralTests.CS$__9__CachedAnonymousMethodDelegate3);        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Linq {
            get {
                return ResourceManager.GetString("Linq", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to H8.GeneralTests.prototype.NestedTry = function() {
        ///	System.Console.WriteLine$1(&quot;enter&quot;);
        ///	try {
        ///		System.Console.WriteLine$1(&quot;outer try&quot;);
        ///		try {
        ///			System.Console.WriteLine$1(&quot;inner try&quot;);
        ///		}
        ///		finally {
        ///			System.Console.WriteLine$1(&quot;inner finally&quot;);
        ///		}
        ///		System.Console.WriteLine$1(&quot;inner follow&quot;);
        ///	}
        ///	finally {
        ///		System.Console.WriteLine$1(&quot;outer finally&quot;);
        ///	}
        ///	System.Console.WriteLine$1(&quot;exit&quot;);
        ///};
        ///.
        /// </summary>
        internal static string NestedTry {
            get {
                return ResourceManager.GetString("NestedTry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Copyright 2009, Frank Laub
        /////
        ///// This file is part of DotWeb.
        /////
        ///// DotWeb is free software: you can redistribute it and/or modify
        ///// it under the terms of the GNU General Public License as published by
        ///// the Free Software Foundation, either version 3 of the License, or
        ///// (at your option) any later version.
        /////
        ///// DotWeb is distributed in the hope that it will be useful,
        ///// but WITHOUT ANY WARRANTY; without even the implied warranty of
        ///// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Source {
            get {
                return ResourceManager.GetString("Source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to H8.GeneralTests.prototype.SwitchInsideWhile = function(x) {
        ///	System.Console.WriteLine$1(&quot;enter&quot;);
        ///	while (x &gt; 10) {
        ///		System.Console.WriteLine$1(&quot;head&quot;);
        ///		var CS$0$0000 = x;
        ///		switch (CS$0$0000) {
        ///			case 0:
        ///				System.Console.WriteLine$1(&quot;Zero: return&quot;);
        ///				return;
        ///			case 1:
        ///			case 2:
        ///				System.Console.WriteLine$1(&quot;One &amp; Two&quot;);
        ///				break;
        ///			case 3:
        ///				System.Console.WriteLine$1(&quot;Three: continue&quot;);
        ///				continue;
        ///			default:
        ///				System.Console.WriteLine$1(&quot;default&quot;);
        ///				break;
        ///		}        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SwitchInsideWhile {
            get {
                return ResourceManager.GetString("SwitchInsideWhile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to H8.GeneralTests.prototype.TakeParameters = function(str, value, rad, flag) {
        ///	System.Console.WriteLine$1(str);
        ///	var x = System.Math.Sin(rad[value] * 1.570795);
        ///	return System.Math.Cos(x);
        ///};
        ///.
        /// </summary>
        internal static string TakeParameters {
            get {
                return ResourceManager.GetString("TakeParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $Class(null, &apos;H8&apos;, &apos;Generic$1&apos;);
        ///
        ///H8.Generic$1.prototype.$ctor = function() {
        ///	return this;
        ///};
        ///
        ///$Class(null, &apos;H8&apos;, &apos;Generic$1_Nested&apos;);
        ///
        ///H8.Generic$1_Nested.prototype.$ctor = function() {
        ///	return this;
        ///};
        ///
        ///$Class(null, &apos;H8&apos;, &apos;Generic$1_Nested_Inner&apos;);
        ///
        ///H8.Generic$1_Nested_Inner.prototype.$ctor = function() {
        ///	return this;
        ///};
        ///
        ///H8.Generic$1_Nested_Inner.prototype.Foo = function() {
        ///};
        ///
        ///H8.Generic$1_Nested.prototype.Foo = function() {
        ///	var x = new H8.Generic$1_Nested_Inner().$ctor();
        ///	x. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TestGenericNested {
            get {
                return ResourceManager.GetString("TestGenericNested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to H8.GeneralTests.prototype.TryInsideCatch = function() {
        ///	System.Console.WriteLine$1(&quot;enter&quot;);
        ///	try {
        ///		System.Console.WriteLine$1(&quot;try1&quot;);
        ///	}
        ///	catch (__ex__) {
        ///		if (__ex__) {
        ///			System.Console.WriteLine$1(&quot;catch&quot;);
        ///			try {
        ///				System.Console.WriteLine$1(&quot;try2&quot;);
        ///			}
        ///			finally {
        ///				System.Console.WriteLine$1(&quot;finally&quot;);
        ///			}
        ///			System.Console.WriteLine$1(&quot;try2 follow&quot;);
        ///		}
        ///	}
        ///	System.Console.WriteLine$1(&quot;exit&quot;);
        ///};
        ///.
        /// </summary>
        internal static string TryInsideCatch {
            get {
                return ResourceManager.GetString("TryInsideCatch", resourceCulture);
            }
        }
    }
}
