//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DotWeb.Translator.Test {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Conditions {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Conditions() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DotWeb.Translator.Test.Conditions", typeof(Conditions).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditions.prototype.IfGreaterAnd = function(/*System.Int32*/ x, /*System.Int32*/ y) {
        ///	var ret = 0;
        ///	if ((x &gt; 1) &amp;&amp; (y &gt; 1)) {
        ///		ret = 1;
        ///	}
        ///	else {
        ///		ret = 2;
        ///	}
        ///	ret = ret + 1;
        ///	return ret;
        ///};
        ///.
        /// </summary>
        internal static string IfGreaterAnd {
            get {
                return ResourceManager.GetString("IfGreaterAnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditions.prototype.IfGreaterAndLess = function(/*System.Int32*/ x, /*System.Int32*/ y) {
        ///	var ret = 0;
        ///	if ((x &gt; 1) &amp;&amp; (y &lt; 1)) {
        ///		ret = 1;
        ///	}
        ///	else {
        ///		ret = 2;
        ///	}
        ///	ret = ret + 1;
        ///	return ret;
        ///};
        ///.
        /// </summary>
        internal static string IfGreaterAndLess {
            get {
                return ResourceManager.GetString("IfGreaterAndLess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditions.prototype.IfGreaterAnd = function(/*System.Int32*/ x, /*System.Int32*/ y) {
        ///	var ret = 0;
        ///	if ((x &gt; 1) &amp;&amp; (y &gt; 1)) {
        ///		ret = 1;
        ///	}
        ///	else {
        ///		ret = 2;
        ///	}
        ///	ret = ret + 1;
        ///	return ret;
        ///};
        ///.
        /// </summary>
        internal static string IfGreaterOr {
            get {
                return ResourceManager.GetString("IfGreaterOr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditions.prototype.IfLessAnd = function(/*System.Int32*/ x, /*System.Int32*/ y) {
        ///	var ret = 0;
        ///	if ((x &lt; 1) &amp;&amp; (y &lt; 1)) {
        ///		ret = 1;
        ///	}
        ///	else {
        ///		ret = 2;
        ///	}
        ///	ret = ret + 1;
        ///	return ret;
        ///};
        ///.
        /// </summary>
        internal static string IfLessAnd {
            get {
                return ResourceManager.GetString("IfLessAnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditions.prototype.IfLessAndGreater = function(/*System.Int32*/ x, /*System.Int32*/ y) {
        ///	var ret = 0;
        ///	if ((x &lt; 1) &amp;&amp; (y &gt; 1)) {
        ///		ret = 1;
        ///	}
        ///	else {
        ///		ret = 2;
        ///	}
        ///	ret = ret + 1;
        ///	return ret;
        ///};
        ///.
        /// </summary>
        internal static string IfLessAndGreater {
            get {
                return ResourceManager.GetString("IfLessAndGreater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditions.prototype.IfLessAnd = function(/*System.Int32*/ x, /*System.Int32*/ y) {
        ///	var ret = 0;
        ///	if ((x &lt; 1) &amp;&amp; (y &lt; 1)) {
        ///		ret = 1;
        ///	}
        ///	else {
        ///		ret = 2;
        ///	}
        ///	ret = ret + 1;
        ///	return ret;
        ///};
        ///.
        /// </summary>
        internal static string IfLessOr {
            get {
                return ResourceManager.GetString("IfLessOr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to H8.SourceTests.prototype.SimpleIfOr = function(/*System.Int32*/ a) {
        ///	if ((a == 12) || (a == 14)) {
        ///		a = 42;
        ///	}
        ///};
        ///.
        /// </summary>
        internal static string NullCoalesce {
            get {
                return ResourceManager.GetString("NullCoalesce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to H8.SourceTests.prototype.SimpleIfOr = function(/*System.Int32*/ a) {
        ///	if ((a == 12) || (a == 14)) {
        ///		a = 42;
        ///	}
        ///};
        ///.
        /// </summary>
        internal static string ReturnNestedTernary {
            get {
                return ResourceManager.GetString("ReturnNestedTernary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to H8.SourceTests.prototype.SimpleIfOr = function(/*System.Int32*/ a) {
        ///	if ((a == 12) || (a == 14)) {
        ///		a = 42;
        ///	}
        ///};
        ///.
        /// </summary>
        internal static string ReturnTernary {
            get {
                return ResourceManager.GetString("ReturnTernary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditions.prototype.SimpleIf = function(/*System.Int32*/ a) {
        ///	if (a == 12) {
        ///		a = 14;
        ///	}
        ///};
        ///.
        /// </summary>
        internal static string SimpleIf {
            get {
                return ResourceManager.GetString("SimpleIf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditions.prototype.SimpleIfAnd = function(/*System.Boolean*/ x, /*System.Boolean*/ y) {
        ///	var ret = 0;
        ///	if ((x) &amp;&amp; (y)) {
        ///		ret = 1;
        ///	}
        ///	else {
        ///		ret = 2;
        ///	}
        ///	ret = ret + 1;
        ///	return ret;
        ///};
        ///.
        /// </summary>
        internal static string SimpleIfAnd {
            get {
                return ResourceManager.GetString("SimpleIfAnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditions.prototype.SimpleIfAndNot = function(/*System.Boolean*/ x, /*System.Boolean*/ y) {
        ///	var ret = 0;
        ///	if ((x) &amp;&amp; (!y)) {
        ///		ret = 1;
        ///	}
        ///	else {
        ///		ret = 2;
        ///	}
        ///	ret = ret + 1;
        ///	return ret;
        ///};
        ///.
        /// </summary>
        internal static string SimpleIfAndNot {
            get {
                return ResourceManager.GetString("SimpleIfAndNot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditions.prototype.SimpleIfElse = function(/*System.Int32*/ a) {
        ///	if (a == 12) {
        ///		a = 42;
        ///	}
        ///	else {
        ///		a = 128;
        ///	}
        ///	System.Console.WriteLine(1);
        ///};
        ///.
        /// </summary>
        internal static string SimpleIfElse {
            get {
                return ResourceManager.GetString("SimpleIfElse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditions.prototype.SimpleIfElseIf = function() {
        ///	var i = 0;
        ///	if (i == 1) {
        ///		System.Console.WriteLine(&quot;True&quot;);
        ///	}
        ///	else {
        ///		if (i == 2) {
        ///			System.Console.WriteLine(&quot;False&quot;);
        ///		}
        ///	}
        ///	System.Console.WriteLine(i);
        ///};
        ///.
        /// </summary>
        internal static string SimpleIfElseIf {
            get {
                return ResourceManager.GetString("SimpleIfElseIf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditions.prototype.SimpleIfIf = function(/*System.Int32*/ a) {
        ///	if (a == 12) {
        ///		a = 14;
        ///	}
        ///	if (a == 13) {
        ///		a = 15;
        ///	}
        ///};
        ///.
        /// </summary>
        internal static string SimpleIfIf {
            get {
                return ResourceManager.GetString("SimpleIfIf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditions.prototype.SimpleIfNotAnd = function(/*System.Boolean*/ x, /*System.Boolean*/ y) {
        ///	var ret = 0;
        ///	if ((!x) &amp;&amp; (y)) {
        ///		ret = 1;
        ///	}
        ///	else {
        ///		ret = 2;
        ///	}
        ///	ret = ret + 1;
        ///	return ret;
        ///};
        ///.
        /// </summary>
        internal static string SimpleIfNotAnd {
            get {
                return ResourceManager.GetString("SimpleIfNotAnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditions.prototype.SimpleIfNotAndNot = function(/*System.Boolean*/ x, /*System.Boolean*/ y) {
        ///	var ret = 0;
        ///	if ((!x) &amp;&amp; (!y)) {
        ///		ret = 1;
        ///	}
        ///	else {
        ///		ret = 2;
        ///	}
        ///	ret = ret + 1;
        ///	return ret;
        ///};
        ///.
        /// </summary>
        internal static string SimpleIfNotAndNot {
            get {
                return ResourceManager.GetString("SimpleIfNotAndNot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditions.prototype.SimpleIfNotOr = function(/*System.Boolean*/ x, /*System.Boolean*/ y) {
        ///	var ret = 0;
        ///	if ((!x) || (y)) {
        ///		ret = 1;
        ///	}
        ///	else {
        ///		ret = 2;
        ///	}
        ///	ret = ret + 1;
        ///	return ret;
        ///};
        ///.
        /// </summary>
        internal static string SimpleIfNotOr {
            get {
                return ResourceManager.GetString("SimpleIfNotOr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditions.prototype.SimpleIfNotOrNot = function(/*System.Boolean*/ x, /*System.Boolean*/ y) {
        ///	var ret = 0;
        ///	if ((!x) || (!y)) {
        ///		ret = 1;
        ///	}
        ///	else {
        ///		ret = 2;
        ///	}
        ///	ret = ret + 1;
        ///	return ret;
        ///};
        ///.
        /// </summary>
        internal static string SimpleIfNotOrNot {
            get {
                return ResourceManager.GetString("SimpleIfNotOrNot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditions.prototype.SimpleIfOr = function(/*System.Boolean*/ x, /*System.Boolean*/ y) {
        ///	var ret = 0;
        ///	if ((x) || (y)) {
        ///		ret = 1;
        ///	}
        ///	else {
        ///		ret = 2;
        ///	}
        ///	ret = ret + 1;
        ///	return ret;
        ///};
        ///.
        /// </summary>
        internal static string SimpleIfOr {
            get {
                return ResourceManager.GetString("SimpleIfOr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditions.prototype.SimpleIfOrNot = function(/*System.Boolean*/ x, /*System.Boolean*/ y) {
        ///	var ret = 0;
        ///	if ((x) || (!y)) {
        ///		ret = 1;
        ///	}
        ///	else {
        ///		ret = 2;
        ///	}
        ///	ret = ret + 1;
        ///	return ret;
        ///};
        ///.
        /// </summary>
        internal static string SimpleIfOrNot {
            get {
                return ResourceManager.GetString("SimpleIfOrNot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.DotWeb;
        ///using System;
        ///
        ///namespace H8
        ///{
        ///	[JsNamespace]
        ///	class Conditions
        ///	{
        ///		public int ReturnTernary(int a) {
        ///			return a &gt; 10 ? 12 : 42;
        ///		}
        ///
        ///		public int ReturnNestedTernary(int a) {
        ///			return (a &lt; 0 ? (a &lt; 100 ? 12 : 24) : (a &gt; 0 ? 10 : 42));
        ///		}
        ///
        ///		public void SimpleIf(int a) {
        ///			if (a == 12) {
        ///				a = 14;
        ///			}
        ///		}
        ///
        ///		public void SimpleIfIf(int a) {
        ///			if (a == 12) {
        ///				a = 14;
        ///			}
        ///
        ///			if (a == 13) {
        ///				a = 15;
        ///			}
        ///		}
        ///
        ///		public void SimpleIfElse(int a)  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Source {
            get {
                return ResourceManager.GetString("Source", resourceCulture);
            }
        }
    }
}
