//
// <%=$cur_table.table_name%>.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Generated by /CodeGen/cecil-gen.rb do not edit
// <%=Time.now%>
//
// (C) 2005 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//

namespace Mono.Cecil.Metadata {
<% $cur_table.ref_ns.each { |ns| %>
	using <%=ns%>;
<% }
%>
	public sealed class <%=$cur_table.table_name%> : IMetadataTable {

		public const int RId = <%=$cur_table.rid%>;

		RowCollection m_rows;

		public <%=$cur_table.row_name%> this [int index] {
			get { return m_rows [index] as <%=$cur_table.row_name%>; }
			set { m_rows [index] = value; }
		}

		public RowCollection Rows {
			get { return m_rows; }
			set { m_rows = value; }
		}

		public int Id {
			get { return RId; }
		}

		internal <%=$cur_table.table_name%> ()
		{
		}

		public void Accept (IMetadataTableVisitor visitor)
		{
			visitor.Visit<%=$cur_table.table_name%> (this);
			this.Rows.Accept (visitor.GetRowVisitor ());
		}
	}

	public sealed class <%=$cur_table.row_name%> : IMetadataRow {

<% $cur_table.columns.each { |col| %>		public <%=col.type%> <%=col.property_name%>;
<% } %>
		internal <%=$cur_table.row_name%> ()
		{
		}

		public void Accept (IMetadataRowVisitor visitor)
		{
			visitor.Visit<%=$cur_table.row_name%> (this);
		}
	}
}
