<?xml version="1.0"?>
<project name="Cecil" default="cecil" basedir=".">

	<property name="debug" value="false" />
	<property name="optimize" value="true" />
	<property name="build.dir" value="${path::get-full-path('bin')}" />
	<property name="keyfile" value="../mono.snk" />
	<property name="csc.defines" value="NO_DEFINE" />

	<!-- allow properties to be customized in external file" -->
	<include buildfile="build.properties" if="${file::exists('build.properties')}" />

	<fileset id="all-files">
		<include name="./**/*.cs" />
		<exclude name="CodeGen/**/*.*" />
	</fileset>

	<target name="clean">
		<delete failonerror="false">
			<fileset>
				<include name="**/bin/**" />
				<include name="**/obj/**" />
				<include name="${build.dir}/**" />
			</fileset>
		</delete>
	</target>

	<target name="init">
		<mkdir dir="${build.dir}" />
	</target>

	<target name="cecil" depends="init">
		<csc output="${build.dir}/Mono.Cecil.dll"
			target="library" debug="${debug}"
			unsafe="false" optimize="${optimize}"
			keyfile="${keyfile}"
			define="${csc.defines}">
			<sources refid="all-files"/>
		</csc>
	</target>

	<target name="compactframework" depends="init" description="compiles cecil to run on the CompactFramework 1.0">
		<property name="compactframework.defines" value="CF_1_0;${csc.defines}" />
		<property name="compactframework.dir" value="${compactframework.v1.dir}" />
		<call target="compactframework-compilation" />
	</target>

	<target name="compactframework2" depends="init" description="compiles cecil to run on the CompactFramework 2.0">
		<property name="compactframework.defines" value="CF_2_0;${csc.defines}" />
		<property name="compactframework.dir" value="${compactframework.v2.dir}" />
		<call target="compactframework-compilation" />
	</target>

	<target name="compactframework-compilation">
		<property name="temp.dir" value="${path::combine(path::get-temp-path(), 'cecil')}" />
		<delete dir="${temp.dir}" if="${directory::exists(temp.dir)}" />
		<mkdir dir="${temp.dir}" />

		<property name="framework.dir" value="${framework::get-framework-directory(framework::get-target-framework())}" />
		<property name="csc.exe" value="${path::combine(framework.dir, 'csc.exe')}" />

		<copy todir="${temp.dir}">
			<fileset refid="all-files" />
		</copy>

		<exec program="${csc.exe}" workingdir="${temp.dir}" failonerror="true">
			<arg value="/optimize" />
			<arg value="/debug-" />
			<arg value="/define:${compactframework.defines}" />
			<arg value="/out:${build.dir}/Mono.Cecil.dll" />
			<arg value="/target:library" />
			<arg value="/warn:0" />
			<arg value="/noconfig" />
			<arg value="/nostdlib+" />
			<arg value="/reference:${compactframework.dir}/mscorlib.dll" />
			<arg value="/reference:${compactframework.dir}/System.dll" />
			<arg value="/recurse:*.cs" />
		</exec>
	</target>

	<target name="codegen">
		<exec program="ruby" commandline="cecil-gen.rb" workingdir="CodeGen" />
	</target>
</project>
