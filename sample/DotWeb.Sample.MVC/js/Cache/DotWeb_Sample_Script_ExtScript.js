// Generated by H8 at: 9/8/2009 9:41:38 AM

// Copyright 2009, Frank Laub
//
// This file is part of DotWeb.
//
// DotWeb is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// DotWeb is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with DotWeb.  If not, see <http://www.gnu.org/licenses/>.

$wnd = window;
$doc = $wnd.document;

Object.prototype.$extend = function(superclass) {
	var tmp = function() {};
	tmp.prototype = superclass.prototype;
	this.prototype = new tmp();
	this.prototype.constructor = this;
	this.prototype.$super = tmp.prototype;
};

$Delegate = function(scope, target) {
	return function() {
		return target.apply(scope, arguments);
	};
};

if(typeof(DotWeb) == 'undefined') DotWeb = {};

if(typeof(DotWeb.Client) == 'undefined') DotWeb.Client = {};

DotWeb.Client.JsScript = function() {
};

if(typeof(DotWeb.Sample) == 'undefined') DotWeb.Sample = {};

if(typeof(DotWeb.Sample.Script) == 'undefined') DotWeb.Sample.Script = {};

DotWeb.Sample.Script.ExtScript = function() {
	this.$super.constructor();
};
DotWeb.Sample.Script.ExtScript.$extend(DotWeb.Client.JsScript);

DotWeb.Sample.Script.ExtScript.NextId = function() {
	// nop
	DotWeb.Sample.Script.ExtScript.counter = DotWeb.Sample.Script.ExtScript.counter + 1;
	var loc0 = DotWeb.Sample.Script.ExtScript.counter;
	return loc0;
};

DotWeb.Client.JsScript.prototype.$ctor = function() {
	return this;
};

DotWeb.Sample.Script.ExtScript.prototype.OnDblClick = function(e /*Ext.EventObject*/) {
	// nop
	console.log("DblClick");
	// nop
	console.log(e);
	// nop
	console.log(this);
	// nop
};

DotWeb.Sample.Script.ExtScript.prototype.$ctor = function() {
	this.id = DotWeb.Sample.Script.ExtScript.NextId();
	this.$super.$ctor.call(this);
	// nop
	// nop
	console.log("ExtScript()");
	// nop
	var loc15 = [];
	var loc6 = {};
	loc6.name = "id";
	loc6.type = "int";
	loc15[0] = loc6;
	var loc7 = {};
	loc7.name = "value";
	loc15[1] = loc7;
	var loc0 = Ext.data.Record.create(loc15);
	var loc8 = {};
	loc8.id = "id";
	// nop
	var loc1 = new Ext.data.JsonReader(loc8, loc0);
	console.log(loc1);
	// nop
	var loc9 = {};
	loc9.reader = loc1;
	// nop
	var loc2 = new Ext.data.Store(loc9);
	var loc16 = [];
	var loc10 = {};
	loc10.id = 1;
	loc10.value = "first";
	loc16[0] = loc10;
	var loc11 = {};
	loc11.id = 2;
	loc11.value = "second";
	loc16[1] = loc11;
	var loc3 = loc16;
	console.log(loc3);
	// nop
	loc2.loadData(loc3);
	// nop
	var loc17 = [];
	var loc12 = {};
	loc12.dataIndex = "id";
	// nop
	loc12.header = "ID";
	// nop
	loc17[0] = loc12;
	var loc13 = {};
	loc13.dataIndex = "value";
	// nop
	loc13.header = "Value";
	// nop
	loc17[1] = loc13;
	var loc4 = loc17;
	var loc5 = new Ext.grid.ColumnModel(loc4);
	var loc14 = {};
	loc14.height = 150;
	// nop
	loc14.renderTo = "grid";
	// nop
	loc14.colModel = loc5;
	// nop
	loc14.store = loc2;
	// nop
	this.grid = new Ext.grid.GridPanel(loc14);
	console.log(this.grid);
	// nop
	this.grid.on("dblclick", $Delegate(this, this.OnDblClick), this);
	// nop
	// nop
	return this;
};

$wnd.onload = function() {
	new DotWeb.Sample.Script.ExtScript().$ctor();
}
